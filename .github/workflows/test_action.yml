name: test_action
on:
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build add-on
        run: python dev.py build
      - name: Store the build
        uses: actions/upload-artifact@v3
        with:
          name: sample-addon-${{ github.event_name == 'pull_request' && format('PR{0}', github.event.pull_request.number) || github.sha }}
          path: |
            out
            !out/sample-addon.zip

  make-tests-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Generate Test Matrix
        id: generate-matrix
        uses: blenderkit/get-blender-test-matrix@main

  TESTS:
    needs: make-tests-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.make-tests-matrix.outputs.matrix)}}



  TESTS:
    needs: make-tests-matrix
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.make-tests-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Blender
        id: blenderBinaryCache
        uses: actions/cache@v3
        with:
          path: /home/runner/blender
          key: blender-${{matrix.version}}-${{matrix.sha}}
      - name: Download Blender
        if: steps.blenderBinaryCache.outputs.cache-hit != 'true'
        run: curl ${{ matrix.download_url }} -o /home/runner/blender.tar.xz
      - name: Mkdir
        run: mkdir {/home/runner/.local/bin,/home/runner/blender} -p
      - name: Extract Blender
        if: steps.blenderBinaryCache.outputs.cache-hit != 'true'
        run: tar -xf /home/runner/blender.tar.xz -C /home/runner/blender --strip-components=1
      - name: Add Blender to PATH
        run: ln -s /home/runner/blender/blender /home/runner/.local/bin/blender
      - name: TEST
        run: python dev.py test --install-at /home/runner/.config/blender/${{matrix.version_x_y}}/scripts/addons
